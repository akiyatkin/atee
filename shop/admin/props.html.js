export const css = ['/-sources/revscroll.css']
import err from "/-controller/err.html.js"
import field from "/-dialog/field.html.js"
import print from "/-words/print.html.js"
import words from "/-words/words.html.js"
import svg from "/-sources/svg.html.js"

export const ROOT = (data, env) => `
	<h1>–°–≤–æ–π—Å—Ç–≤–∞</h1>
	${showProps(data, env)}
`

const showProps = (data, env) => `	
	<form style="display: flex; margin: 1em 0; gap: 1em; flex-wrap: wrap">
		<div class="float-label">
			<input id="freeinp" name="query" type="search" placeholder="–ü–æ–∏—Å–∫" value="${env.bread.get.search ?? ''}">
			<label for="freeinp">–ü–æ–∏—Å–∫</label>
		</div>
		<div style="display: flex; justify-content: space-between; flex-grow: 1; gap: 1em;">
			<button type="submit">–ù–∞–π—Ç–∏</button>
			${field.search({
				cls: 'a',
				search:'/-shop/admin/get-prop-search',
				value: '–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ',
				heading: "–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ",
				descr: "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ",
				label: '–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ', 
				type: 'text',
				name: 'prop_nick',
				find: 'prop_nick',
				action: '/-shop/admin/set-prop-create',
				args: {},
				reloaddiv: env.layer.div
			})}
		</div>
		<script>
			(form => {
				const btn = form.querySelector('button')
				const input = form.querySelector('input')
				form.addEventListener('submit', async (e) => {
					e.preventDefault()
					const Client = await window.getClient()
					Client.go('props?search=' + input.value, false)
					Client.reloaddiv("${env.layer.div}")
				})
			})(document.currentScript.parentElement)
		</script>
	</form>
	<div class="revscroll" style="margin: 2em 0">
		<table draggable="false" class="list">
			<thead>
				<td>–°–≤–æ–π—Å—Ç–≤–æ</td>
				<td>–¢–∏–ø</td>
				<td>–ó–Ω–∞—á–µ–Ω–∏–π</td>
				<td>–ö–∞—Ä—Ç–æ—á–∫–∞</td>
				<td>–§–∏–ª—å—Ç—Ä</td>
				<td>–í—ã–±–æ—Ä</td>
				<td>–û–±—Ä–∞–±–æ—Ç–∫–∞</td>
				<td>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</td>
				<td></td>
			</thead>
			<tbody>
				${data.props.map(row => showTr(data, env, row)).join('')}
			</tbody>
		</table>
		${showScriptDrag(data, env)}
		<script>
			(async div => {
				const table = div.querySelector('table')
				table.addEventListener('click', (e) => {
					const old = table.querySelector('.clicked')
					if (old) old.classList.remove('clicked')
					const tr = e.target.closest('tr')
					if (!tr) return
					tr.classList.add('clicked')
				})
			})(document.currentScript.parentElement)
		</script>
	</div>
`
const showRed = (nick) => `
	<span style="color:red">${nick}</span>
`
const showLink = (data, env, prop) => `
	<a href="/@atee/sources/prop/${prop.prop_id}">${prop.prop_title}</a>
`
const showTr = (data, env, prop) => `
	<tr class="item" data-id="${prop.prop_id || ''}" style="white-space: nowrap;">
		<td>${prop.prop_title ? showLink(data, env, prop) : showRed(prop.prop_nick)}</td>
		<td>${prop.type || ''}</td>
		<td>${({"":"–û–¥–Ω–æ", "1":"–ù–µ—Å–∫–æ–ª—å–∫–æ"})[prop.multi || '']}</td>
		<td>
			${field.search({
				cls: 'a',
				search: '/-shop/admin/get-tpl-sub?type=card',
				value: prop.card_tpl,
				heading: "–®–∞–±–ª–æ–Ω –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏",
				descr: '',
				label: "–®–∞–±–ª–æ–Ω –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏", 
				type: 'text',
				name: 'sub',
				find: 'left',
				action: '/-shop/admin/set-tpl-sub?type=card',
				args: { prop_nick: prop.prop_nick}
			})}
		</td>
		<td>
			${field.search({
				cls: 'a',
				search: '/-shop/admin/get-tpl-sub?type=filter',
				value: prop.filter_tpl,
				heading: "–®–∞–±–ª–æ–Ω –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞",
				descr: '',
				label: '–®–∞–±–ª–æ–Ω –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞', 
				type: 'text',
				name: 'sub',
				find: 'left',
				action: '/-shop/admin/set-tpl-sub?type=filter',
				args: { prop_nick: prop.prop_nick}
			})}
		</td>
		<td>
			${field.setpop({
				heading:'–í—ã–±–æ—Ä –≤ —Ñ–∏–ª—å—Ç—Ä–µ',
				cls: 'a',
				value: prop.singlechoice,
				name: 'bit',
				action: '/-shop/admin/set-prop-singlechoice', 
				values: {"":"–ù–µ—Å–∫–æ–ª—å–∫–æ", "1":"–û–¥–∏–Ω"},
				args: { prop_nick: prop.prop_nick}
			})}
		</td>
		<td>
			${!prop.known ? '<i>&mdash;</i>' : field.setpop({
				heading:'–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–æ–π—Å—Ç–≤–∞',
				cls: 'a',
				value: prop.known,
				name: 'known',
				descr: '<b>more</b> –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ–Ω–æ –ø–æ–∫–∞–∂–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å–æ –≤—Å–µ–º–∏ —Ç–∞–∫–∏–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ. –°–≤–æ–π—Å—Ç–≤–æ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π <b>column</b> –ø–æ–∫–∞–∂–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–∞–º, –≥–¥–µ –µ–≥–æ –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –Ω–∏–≥–¥–µ –Ω–µ –ø–æ–∫–∞–∂–µ—Ç—Å—è, –Ω–æ –ø—Ä–∏–¥—ë—Ç —Å –¥–∞–Ω–Ω—ã–º–∏. –°–≤–æ–π—Å—Ç–≤–æ <b>system</b> –¥–∞–∂–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –ø—Ä–∏–¥—ë—Ç –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç–æ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä –±—ã—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–µ–º –≥—Ä—É–ø–ø.',
				action: '/-sources/set-known', 
				values: {"system":"üõ°Ô∏è system", "more":"üü° more", "column":"‚úÖ column"},
				args: {prop_id: prop.prop_id}
			})}
		</td>
		<td>
			${prop.prop_id ? field.areamin({
				name: 'comment', 
				label: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', 
				action: '/-sources/set-prop-comment', 
				args: {prop_id: prop.prop_id},
				value: prop.comment
			}) : '<i>&mdash;</i>'}
		</td>
		<td>
			${field.button({
				cls: 'transparent mute',
				label: svg.cross(), 
				confirm: '–£–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–æ–π—Å—Ç–≤–∞?',
				action: '/-shop/admin/set-prop-delete',
				reloaddiv: env.layer.div,
				args: {prop_nick: prop.prop_nick},
				reloaddiv: env.layer.div
			})}
		</td>
	</tr>
`
const showScriptDrag = (data, env) => `
	<script>
		(async table => {
			const list = table.tBodies[0]
			const Drag = await import('/-note/theory/Drag.js').then(r => r.default)
			Drag.make(list, async ({id, next_id}) => {
				const senditmsg = await import('/-dialog/senditmsg.js').then(r => r.default)
				const ans = await senditmsg(list, '/-sources/set-prop-ordain', {id, next_id})
			})
		})(document.currentScript.previousElementSibling)
	</script>
`